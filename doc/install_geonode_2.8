# Install GeoNode Application
# http://docs.geonode.org/en/master/tutorials/install_and_admin/geonode_install/install_geonode_application.html

sudo apt-get update

sudo apt-get install -y python-virtualenv python-dev libxml2 libxml2-dev libxslt1-dev zlib1g-dev libjpeg-dev libpq-dev git default-jdk
sudo apt-get install -y build-essential openssh-server gettext nano vim unzip zip patch git-core postfix

# No postfix mail configuration

# JD: This fails because the installer points to a now deleted zip file.
#
# sudo apt-add-repository -y ppa:webupd8team/java
# sudo apt-get update
# sudo apt-get install -y oracle-java8-installer
#
# Used workaround as per https://stackoverflow.com/questions/48318832/unable-to-install-java8-using-ppa-repository-on-ubuntu-16-04/48322868#48322868
# But then noticed Java is already installed:
java -version

# Try skipping this.

# mkdir ~/tmp
# cd tmp
# wget --continue --no-check-certificate --header "Cookie: oraclelicense=a" 'https://download.java.net/java/early_access/jdk8/b03/BCL/jdk-8u202-ea-bin-b03-linux-x64-07_nov_2018.tar.gz'
# tar -xf jdk-8u202-ea-bin-b03-linux-x64-07_nov_2018.tar.gz
# sudo rm -R /usr/lib/jvm/java-8-oracle
# sudo mkdir /usr/lib/jvm/java-8-oracle
# sudo mv jdk1.8.0_202/* /usr/lib/jvm/java-8-oracle
# sudo chown -R root:root /usr/lib/jvm/java-8-oracle
#
# sudo update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/java-8-oracle/bin/java" 1
# sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/java-8-oracle/bin/javac" 1
# sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/java-8-oracle/bin/javaws" 1
#
# sudo vi /etc/profile:
#
# JAVA_HOME=/usr/lib/jvm/java-8-oracle
# PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
# export JAVA_HOME
# export PATH


# Back to Geonode install doco:

sudo apt-add-repository -y ppa:ubuntugis && sudo apt-get update && sudo apt-get upgrade -y

# grub: install the package maintainer's version

sudo apt-add-repository -y ppa:ubuntugis/ppa && sudo apt-get update && sudo apt-get upgrade -y

sudo apt-get install -y gcc apache2 libapache2-mod-wsgi libgeos-dev libjpeg-dev libpng-dev libpq-dev libproj-dev libxml2-dev libxslt-dev

sudo apt-add-repository -y ppa:ubuntugis/ubuntugis-testing && sudo apt-get update && sudo apt-get upgrade -y

sudo apt-get install -y gdal-bin libgdal20 libgdal-dev

sudo apt-get install -y python-gdal python-pycurl python-imaging python-pastescript python-psycopg2 python-urlgrabber

sudo apt-get install -y postgresql postgis postgresql-9.5-postgis-scripts postgresql-contrib

sudo apt-get install -y tomcat8

sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove && sudo apt-get autoclean && sudo apt-get purge && sudo apt-get clean


sudo apt-get install -y python-pip

# JD: SKIP THIS:
# pip install --upgrade pip

pip install --user virtualenv

pip install --user virtualenvwrapper
# The commands above will install the Python Venv packages

# Repeated from here 16/1 after Alessio fixed https://github.com/GeoNode/geonode/issues/4153
#
export WORKON_HOME=~/Envs
mkdir -p $WORKON_HOME
source $HOME/.local/bin/virtualenvwrapper.sh
printf '\n%s\n%s\n%s' '# virtualenv' 'export WORKON_HOME=~/Envs' 'source $HOME/.local/bin/virtualenvwrapper.sh' >> ~/.bashrc
source ~/.bashrc
# We have now configured the user environment

mkvirtualenv --no-site-packages geonode
# Through this command we have created a brand new geonode Virual Environment

sudo useradd -m geonode

# JD: use ubuntu not geo
# sudo usermod -a -G geonode geo
sudo usermod -a -G geonode ubuntu
sudo chmod -Rf 775 /home/geonode/
# sudo su - geo
sudo su - ubuntu
# The commands above are needed only if geo and geonode users have not been already defined



workon geonode



pip install Django==1.8.18

# JD: change 2.8.0 to 2.8 because 2.8.0.zip is a 404 and 2.8.zip works :)
# django-admin.py startproject --template=https://github.com/GeoNode/geonode-project/archive/2.8.0.zip -e py,rst,json,yml my_geonode
django-admin.py startproject --template=https://github.com/GeoNode/geonode-project/archive/2.8.zip -e py,rst,json,yml my_geonode




cd my_geonode

# Find the closest pygdal version.
# Example: 2.2.1 ...  2.2.1.3, ...
# gdal-config --version && pip install pygdal==
#
# JD: found version 2.2.1.3

pip install pygdal==2.2.1.3

vi requirements.txt
# Make sure requirements contains reference to geonode 2.8 branch
# and correct gdal version (see above)
-e git://github.com/GeoNode/geonode.git@2.8.0#egg=geonode
pygdal==2.2.1.3

# JD: added pygdal==2.2.1.3

pip install -r requirements.txt --upgrade

# JD: red message (error?) but still completed:
#
# django-filter 2.0.0 has requirement Django>=1.11, but you'll have django 1.8.19 which is incompatible.
# docker 3.1.1 has requirement requests!=2.18.0,>=2.14.2, but you'll have requests 2.11.1 which is incompatible.
# django-haystack 2.8.1 has requirement Django>=1.11, but you'll have django 1.8.19 which is incompatible.
# requests-oauthlib 1.1.0 has requirement oauthlib<3.0.0,>=2.1.0, but you'll have oauthlib 2.0.1 which is incompatible.

pip install -e . --upgrade --no-cache

# Create GeoNode DB & Finalize GeoNode Setup
# http://docs.geonode.org/en/master/tutorials/install_and_admin/geonode_install/create_geonode_db.html

sudo -u postgres createuser -P geonode
# enter geonode as Password

sudo -u postgres createdb -O geonode geonode
sudo -u postgres createdb -O geonode geonode_data

sudo -u postgres psql -d geonode_data -c 'CREATE EXTENSION postgis;'

sudo -u postgres psql -d geonode_data -c 'GRANT ALL ON geometry_columns TO PUBLIC;'
sudo -u postgres psql -d geonode_data -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;'
sudo -u postgres psql -d geonode_data -c 'GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO geonode;'


sudo vi /etc/postgresql/9.5/main/pg_hba.conf

# Change 'peer' to 'trust' in:

# "local" is for Unix domain socket connections only
local   all             all                                     peer

sudo service postgresql restart

# Test with:
psql -U geonode geonode

# Finalize GeoNode Setup
# http://docs.geonode.org/en/master/tutorials/install_and_admin/geonode_install/create_geonode_db.html#finalize-geonode-setup

workon geonode

# cd /home/geonode
# JD: actually /home/ubuntu

cd my_geonode

cp my_geonode/local_settings.py.sample my_geonode/local_settings.py

# ************************
While instance was stopped
Snapshotted AMI "KERData try 0.1": Geonode 2.8 mid-install
# ************************

vi my_geonode/local_settings.py

# ALLOWED_HOSTS = {{ pub_ip }}
# fallback to regular list of values separated with misc chars
ALLOWED_HOSTS = ['54.183.212.42', HOSTNAME, 'localhost', 'django', 'geonode'] if os.getenv('ALLOWED_HOSTS') is None \

# SITEURL = os.getenv('SITEURL', "http://%s:%s/" % (SITE_HOST_NAME, SITE_HOST_PORT))
SITEURL = "http://54.183.212.42:80/"

# Define email service on GeoNode
EMAIL_ENABLE = False # True

# TIME_ZONE = 'UTC'
TIME_ZONE = 'America/Phoenix'

# JD: Can make other changes - see doco link above

# Finalize GeoNode Setup & Test
# http://docs.geonode.org/en/master/tutorials/install_and_admin/geonode_install/create_geonode_db.html#finalize-geonode-setup-test

sudo service apache2 stop
sudo service tomcat8 stop

# JD: added to avoid error "fatal: Not a git repository" from `git clean -dxf`
git init

# ************************
While instance was stopped
Snapshotted AMI "KERData try 0.2": Geonode 2.8 mid-install
# ************************

# JD SKIP TO THERE
# This will delete all data you created until now.
paver reset_hard

=> New errors:

[Errno 3] No such process
---> pavement.stop_qgis_server

[Errno 2] No such file or directory: path('geoserver/data/global.xml')
[Errno 2] No such file or directory: path('geoserver/data/security/filter/geonode-oauth2/config.xml')
[Errno 2] No such file or directory: path('geoserver/data/security/role/geonode REST role service/config.xml')

rm -Rf geoserver
rm -Rf downloaded/*.*

# JD 17/1: SKIP TO HERE commands below failed because `paver reset_hard` removed everything from my_geonode

# Revert to default site settings
vi my_geonode/local_settings.py

# Comment the following pieces
  # SITEURL...
  # GEOSERVER_LOCATION...
  # GEOSERVER_PUBLIC_LOCATION ...

sudo chown -Rf geonode: my_geonode/uploaded/
sudo chown -Rf geonode: my_geonode/static*


# See Issue_4153.md - GeoIP/GeoLite problem has gone away...
# Now fixed: the missing file is there now. Go figure.

# JD added to avoid permission error in paver setup
#
sudo chmod 777 /usr/local/share

paver setup

paver sync
# This command prepares the DB tables and loads initial data

paver start
# This command allows you to start GeoNode in development mode

# Test URLs:
# http://54.183.212.42:8000/
# http://54.183.212.42:8080/geoserver/web/

# Setup & Configure HTTPD
# http://docs.geonode.org/en/master/tutorials/install_and_admin/geonode_install/setup_configure_httpd.html

paver stop

workon geonode

vim my_geonode/local_settings.py

# Un-comment the following pieces:

...
SITEURL = 'http://localhost'
...
GEOSERVER_LOCATION = os.getenv(
    'GEOSERVER_LOCATION', '{}/geoserver/'.format(SITEURL)
)

GEOSERVER_PUBLIC_LOCATION = os.getenv(
    'GEOSERVER_PUBLIC_LOCATION', '{}/geoserver/'.format(SITEURL)
)
...


sudo vi /etc/apache2/sites-available/geonode.conf
# Add content from doco...

sudo a2enmod proxy_http
sudo a2ensite geonode
