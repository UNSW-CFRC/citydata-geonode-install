---
- hosts: '{{ host }}'
  tasks:
#   - name: Encrypt the site with Apache Secure Sockets Layer (SSL)
#     become: true

# The first step is to generate a DES key.:
# for CommonName use GeoNode domain name or ip address as specified in GeoNode's SITEURL
# genrsa superceded by genpkey. - https://linux.die.net/man/1/openssl
#
# openssl genpkey -des3 -out server.key 1024

   - name: Generate a private key
     openssl_privatekey:
       path: ~/server.key
       force: True
       size: 1024
       type: RSA

# openssl req -new -key server.key -out server.csr
# The ansible module 'openssl_csr' is not recognised as a command :/ 
#   - name: Generate a certificate signing request
#     openssl_csr:
#       path: server.csr
#       privatekey_path: server.key
#       commonName: '{{ host }}'
#       countryName: AU
#       organizationName: '{{ orgname }}'
#       emailAddress: '{{ admin_email }}'
#     become: true

   - name: Copy config file
     copy:
       src: 10_openssl.conf
       dest: '/home/{{ ansible_env.USER }}/10_openssl.conf'
     become: true

   - name: Generate a certificate signing request
     command: openssl req -new -key server.key -out server.csr -config '/home/{{ ansible_env.USER }}/10_openssl.conf'
#       chdir: '~'

   - name: Rename key file
     command: mv server.key server.key.tmp 

   - name: Generate new server.key without challenge password
     command: openssl rsa -in server.key.tmp -out server.key

   - name: Generate certificate
     command: openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
     
   - name: Copy certificate to standard location
     command: cp server.crt /etc/ssl/certs/geonode.crt
     become: true

   - name: Copy key to standard location
     command: cp server.key /etc/ssl/private/geonode.key
     become: true
     
   - name: Check cacerts.txt exists
     stat: path=/usr/lib/python2.7/dist-packages/httplib2/cacerts.txt
     register: cacerts_stat

   - name: Append to cacerts.txt if it exists
     shell: cat server.crt >> /usr/lib/python2.7/dist-packages/httplib2/cacerts.txt
     when: cacerts_stat.stat.exists
     become: true

   - name: Write new cacerts.txt file
     command: cp server.crt /usr/lib/python2.7/dist-packages/httplib2/cacerts.txt
     when: cacerts_stat.stat.exists == False
     become: true

     # sudo keytool -import -alias geonodessl -keystore /etc/ssl/certs/java/cacerts -file server.crt
     #
   - name: Import key
     java_cert: 
       cert_alias: geonodessl
       keystore_path: /etc/ssl/certs/java/cacerts
       keystore_pass: changeit
       cert_path: server.crt
     become: true