---
- name: Stop Tomcat
  service:
    name: tomcat7
    state: stopped
  become: true

- name: Copy Geoserver war to Tomcat
  command: cp '{{ home }}/geonode/downloaded/geoserver.war' /var/lib/tomcat7/webapps/
  become: true

- name: Force Tomcat Restart to deploy Geoserver
  service:
    name: tomcat7
    state: restarted
  become: true

- name: Stop Tomcat again
  service:
    name: tomcat7
    state: stopped
  become: true

- name: Increase JVM memory
  # In response to 'OutOfMemoryError: Java heap space error' on uploading large layer
  # See: http://docs.geonode.org/en/master/tutorials/advanced/geonode_production/adv_gsconfig/gsproduction.html#configuring-your-container-for-production
  # Further increased Xms and Xmx from 2048 to 4096, and added MaxPermSize=512m after out of memory error from WMS call 11/7/2017
  lineinfile:
    dest: /etc/default/tomcat7
    regexp: '^\s*JAVA_OPTS\s*=.*$'
    line: 'JAVA_OPTS="-Djava.awt.headless=true -Xms4096m -Xmx4096M -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC"'
  become: true

- name: Move Geoserver data directory to data disk
  command: mv /var/lib/tomcat7/webapps/geoserver/data '{{ gsdata }}'
  become: true

- name: Link Geoserver data directory
  file:
    src: '{{ gsdata }}'
    path: /var/lib/tomcat7/webapps/geoserver/data
    state: link
  become: true

- name: Add GeoNode base url to geoserver config
  blockinfile:
    dest: /var/lib/tomcat7/webapps/geoserver/WEB-INF/web.xml
    marker: '<!-- {mark} ANSIBLE install_geoserver_application MANAGED BLOCK -->'
    insertbefore: '<filter>'
    block: |
      <context-param>
      <param-name>GEONODE_BASE_URL</param-name>
      <param-value>http://localhost/</param-value>
      </context-param>
  become: true

- name: add Cross-Origin Resource Sharing (CORS) on geoserver
  blockinfile:
    dest: /var/lib/tomcat7/conf/web.xml
    insertbefore: </web-app>
    marker: '<!-- {mark} ANSIBLE install_geoserver_application MANAGED BLOCK -->'
    block: |
      <!-- The filter to allow Cross-Origin Resource Sharing (CORS) -->
      <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
      </filter>
      <!-- The mapping for the CORS Filter: url pattern is relative to context /geoserver -->
      <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
      </filter-mapping>
  become: true
  notify:
    - Restart Tomcat

- name: Set digest password encoding
  # To remove warning message: The default user/group service should use digest password encoding.
  lineinfile:
    dest: /var/lib/tomcat7/webapps/geoserver/data/security/usergroup/default/config.xml
    regexp: '\s*<passwordEncoderName>.*'
    line: '  <passwordEncoderName>digestPasswordEncoder</passwordEncoderName>'
  become: true
  notify:
    - Restart Tomcat

- name: Check for masterpw.info file
  stat:
    path: /var/lib/tomcat7/webapps/geoserver/data/security/masterpw.info
  register: masterpw_file

- name: Save Geoserver master password
  command: grep 'master password is' /var/lib/tomcat7/webapps/geoserver/data/security/masterpw.info
  register: masterpw
  when: masterpw_file.stat.exists == True
 
- name: Remove masterpw.info file to remove security risk warning
  file:
    path: /var/lib/tomcat7/webapps/geoserver/data/security/masterpw.info
    state: absent
  become: true
