---
- name: Check if GEOSERVER_DATA_DIR parameter exists
  xml:
    path: /var/lib/tomcat8/webapps/geoserver/WEB-INF/web.xml
    xpath: /web-app/context-param/param-name[text()="GEOSERVER_DATA_DIR"]
    content: text
  register: gsdata_parm_check
  ignore_errors: yes
  no_log: true
  become: true

- name: Add container for GEOSERVER_DATA_DIR parameter if needed
  xml:
    path: /var/lib/tomcat8/webapps/geoserver/WEB-INF/web.xml
    xpath: /web-app
    add_children: 'context-param'
  when: gsdata_parm_check.failed
  become: true

- name: Add GEOSERVER_DATA_DIR parameter if needed
  xml:
    path: /var/lib/tomcat8/webapps/geoserver/WEB-INF/web.xml
    xpath: /web-app/context-param[last()]
    set_children:
    - 'param-name': GEOSERVER_DATA_DIR
    - 'param-value': /var/lib/tomcat8/webapps/geoserver/data
  when: gsdata_parm_check.failed
  become: true
  notify:
    - Restart Tomcat

- name: Set GEOSERVER_DATA_DIR parameter if already present
  xml:
    path: /var/lib/tomcat8/webapps/geoserver/WEB-INF/web.xml
    xpath: /web-app/context-param[param-name="GEOSERVER_DATA_DIR"]
    set_children:
    - 'param-name': GEOSERVER_DATA_DIR
    - 'param-value': /var/lib/tomcat8/webapps/geoserver/data
  when: not gsdata_parm_check.failed
  become: true
  notify:
    - Restart Tomcat

#- name: Set GEOSERVER_DATA_DIR
#  xml:
#    path: /var/lib/tomcat8/webapps/geoserver/WEB-INF/web.xml
#    xpath: /web-app/context-param[last()]
#    add_children:
#    - 'param-name': GEOSERVER_DATA_DIR
#    - 'param-value': /var/lib/tomcat8/webapps/geoserver/data
#  become: true
#  notify:
#    - Restart Tomcat
#
- name: Install local settings
  template:
    src: local_settings.py.j2
    dest: '{{ home }}/geonode/geonode/local_settings.py'
  become: true

- name: Upgrade beautifulsoup
  # To avoid bug when running /manage.py fixsitename
  # See https://bugs.launchpad.net/beautifulsoup/+bug/1603299
  pip:
    name: beautifulsoup4
    version: 4.5.1
  become: true

#- name: Initialize the Database
#  command: python '{{ home }}/geonode/manage.py' syncdb --noinput

- name: Initialize the Database
  command: python '{{ home }}/geonode/manage.py' migrate

- name: Load initial data
  command: python '{{ home }}/geonode/manage.py' loaddata '{{ home }}/geonode/geonode/base/fixtures/initial_data.json'

- name: Fix sitename
  command: python '{{ home }}/geonode/manage.py' fixsitename

- name: Display shortname on homepage
  lineinfile:
    dest: '{{ home }}/geonode/geonode/templates/site_index.html'
    regexp: '^\s*<h1 class="page-title">.*</h1>'
    line: '                    <h1 class="page-title">{{ sitename_short }}</h1>'
  become: true

- name: Create GeoNode Superuser
  # Will fail if superuser already exists. Ignore this and suppress error log.
  command: python '{{ home }}/geonode/manage.py' createsuperuser --noinput --username=admin --email='{{ admin_email }}'
  ignore_errors: yes
  no_log: true

- name: Change superuser password
  # Separating this task from previous one (createsuperuser) allows playbook to be idempotent.
  # I.e. password can be changed on an existing superuser account.
  expect:
    command: python '{{ home }}/geonode/manage.py' changepassword admin
    responses:
      Password: '{{ admin_pass }}'
      Password (again): '{{ admin_pass }}'
  notify:
    - Restart Apache
