DO
$do$
DECLARE
  u   varchar[];
  users varchar[] :=
  (
    select distinct username, password
    from geonode.public.layers_layer, geonode.public.people_profile, geonode.public.guardian_userobjectpermission, geonode.public.auth_permission
    where username not in ('admin', 'AnonymousUser')
    and people_profile.id = guardian_userobjectpermission.user_id
    and auth_permission.name = 'Can download resource'
    and guardian_userobjectpermission.object_pk = to_char(layers_layer.resourcebase_ptr_id,'FM99999999999')
    and guardian_userobjectpermission.permission_id = auth_permission.id
    order by username;
  )

BEGIN
   FOREACH u IN ARRAY users
   LOOP
      RAISE NOTICE 'create user', u[1], 'with password', u[2];
   END LOOP;
END
$do$

----------------------------------------------

connect to geonode

foreach
(
  select distinct username
  from geonode.public.layers_layer, geonode.public.people_profile, geonode.public.guardian_userobjectpermission, geonode.public.auth_permission
  where username not in ('admin', 'AnonymousUser')
  and people_profile.id = guardian_userobjectpermission.user_id
  and auth_permission.name = 'Can download resource'
  and guardian_userobjectpermission.object_pk = to_char(layers_layer.resourcebase_ptr_id,'FM99999999999')
  and guardian_userobjectpermission.permission_id = auth_permission.id
  order by username;
)

{
  create user $username with password $password

  foreach
  (
    select distinct username, layers_layer.name
    from layers_layer, people_profile, guardian_userobjectpermission, auth_permission
    where username not in ('admin', 'AnonymousUser')
    and people_profile.id = guardian_userobjectpermission.user_id
    and auth_permission.name = 'Can download resource'
    and guardian_userobjectpermission.object_pk = to_char(layers_layer.resourcebase_ptr_id,'FM99999999999')
    and guardian_userobjectpermission.permission_id = auth_permission.id
    order by username, layers_layer.name;
  )

  {
    grant select on geonode_data.public.$name to $username
  }
}